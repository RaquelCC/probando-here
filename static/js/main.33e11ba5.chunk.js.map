{"version":3,"sources":["components/Map.js","components/ThemeSelector.js","components/GeocoordinateGetter.js","components/AddMarker.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","app_id","app_code","useHTTPS","zoom","theme","style","platform","map","markers","currentPosition","changeTheme","layer","getMapTileService","type","createTileLayer","setBaseLayer","window","H","service","Platform","createDefaultLayers","container","refs","normal","center","lat","lng","events","mapevents","MapEvents","Behavior","ui","UI","createDefault","Marker","addObjects","_this2","marker","indexOf","newMarker","long","startingPoint","endingPoint","routeLine","removeObjects","startMarker","endMarker","routingParameters","mode","waypoint0","waypoint1","representation","console","log","onResult","result","route","routeShape","startPoint","endPoint","linestring","response","shape","geo","LineString","forEach","point","parts","split","pushLatLngAlt","waypoint","mappedPosition","Polyline","strokeColor","lineWidth","latitude","longitude","setViewBounds","getBounds","router","getRoutingService","calculateRoute","error","alert","message","react_default","a","createElement","ref","width","height","background","React","Component","ThemeSelector","thumbnails","onChange","push","key","onClick","id","GeocoordinateGetter","start","end","handleChangeInput","bind","assertThisInitialized","handleChangeInput2","e","setState","objectSpread","target","value","placeholder","getCoordinates","AddMarker","input","handleInputChange","getMarker","App","navigator","geolocation","getCurrentPosition","position","coords","_this3","fetch","then","data","json","Response","View","Result","Location","NavigationPosition","Latitude","Longitude","address","Address","Label","evt","preventDefault","change","summary","routeSummary","className","Map_Map","ThemeSelector_ThemeSelector","GeocoordinateGetter_GeocoordinateGetter","AddMarker_AddMarker","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33e11ba5.chunk.js","sourcesContent":["import React from 'react';\r\n// import { Marker } from 'react-leaflet';\r\n\r\nexport default class Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    \r\n    this.state = {\r\n      app_id: props.app_id,\r\n      app_code: props.app_code,\r\n      useHTTPS: true,\r\n      // useCIT: true,\r\n      // center: {\r\n      //   lat: props.lat,\r\n      //   lng: props.lng,\r\n      // },\r\n      zoom: props.zoom,\r\n      theme: props.theme,\r\n      style: props.style,\r\n    }\r\n    \r\n    this.platform = null;\r\n    this.map = null;\r\n    this.markers = [];\r\n    this.currentPosition = {}\r\n\r\n    \r\n  }\r\n\r\n\r\n  shouldComponentUpdate(props, state) {\r\n    this.changeTheme(props.theme, props.style);\r\n    return true;\r\n  }\r\n\r\n  changeTheme(theme, style) {\r\n    var tiles = this.platform.getMapTileService({ 'type': 'base' });\r\n    var layer = tiles.createTileLayer(\r\n      'maptile',\r\n      theme,\r\n      256,\r\n      'png',\r\n      { 'style': style }\r\n    );\r\n    this.map.setBaseLayer(layer);\r\n  }\r\n\r\n\r\n\r\n  // TODO: Add theme selection discussed later HERE\r\n\r\n  componentDidMount() {\r\n\r\n    this.platform = new window.H.service.Platform(this.state);\r\n\r\n    var layer = this.platform.createDefaultLayers();\r\n    var container = this.refs[\"here-map\"];\r\n\r\n    this.map = new window.H.Map(container, layer.normal.map, {\r\n      center: {\r\n        lat: this.props.lat,\r\n        lng: this.props.lng\r\n      },\r\n      zoom: this.state.zoom,\r\n    })\r\n\r\n    var events = new window.H.mapevents.MapEvents(this.map);\r\n    // eslint-disable-next-line\r\n    var behavior = new window.H.mapevents.Behavior(events);\r\n    // eslint-disable-next-line\r\n    var ui = new window.H.ui.UI.createDefault(this.map, layer)\r\n    // this.map.removeObjects([this.currentPosition])\r\n    this.currentPosition = new window.H.map.Marker({\r\n      lat: this.props.lat,\r\n      lng: this.props.lng\r\n    })\r\n    this.map.addObjects([this.currentPosition])\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.marker && this.markers.indexOf(this.props.marker) === -1) {\r\n    \r\n        this.newMarker = new window.H.map.Marker({\r\n          lat: this.props.marker.lat,\r\n          lng: this.props.marker.long\r\n        });\r\n        this.map.addObjects([this.newMarker])\r\n    }\r\n    if (this.props.startingPoint.lat !== \"\" && this.props.endingPoint.lat !== \"\") {\r\n      // console.log(\"props!\")\r\n      if (this.routeLine) {\r\n        this.map.removeObjects([this.routeLine, this.startMarker, this.endMarker]);\r\n      }\r\n      this.routingParameters = {\r\n        // The routing mode:\r\n        'mode': 'fastest;pedestrian',\r\n        // The start point of the route:\r\n        'waypoint0': /*'geo!-33.417442,-70.6057'*/\"geo!\" + this.props.startingPoint.lat + \",\" + this.props.startingPoint.long,\r\n        // The end point of the route:\r\n        'waypoint1': /*'geo!-33.454103,-70.688219'*/\"geo!\" + this.props.endingPoint.lat + \",\" + this.props.endingPoint.long,\r\n        // To retrieve the shape of the route we choose the route\r\n        // representation mode 'display'\r\n        'representation': 'display'\r\n      };\r\n\r\n      console.log(this.routingParameters)\r\n\r\n      // Define a callback function to process the routing response:\r\n      this.onResult = result => {\r\n        console.log(result)\r\n        var route,\r\n          routeShape,\r\n          startPoint,\r\n          endPoint,\r\n          linestring;\r\n        if (result.response && result.response.route) {\r\n          // Pick the first route from the response:\r\n          route = result.response.route[0];\r\n          // Pick the route's shape:\r\n          routeShape = route.shape;\r\n\r\n          // Create a linestring to use as a point source for the route line\r\n          linestring = new window.H.geo.LineString();\r\n\r\n          // Push all the points in the shape into the linestring:\r\n          routeShape.forEach(function (point) {\r\n            var parts = point.split(',');\r\n            linestring.pushLatLngAlt(parts[0], parts[1]);\r\n          });\r\n\r\n          // Retrieve the mapped positions of the requested waypoints:\r\n          startPoint = route.waypoint[0].mappedPosition;\r\n          endPoint = route.waypoint[1].mappedPosition;\r\n\r\n          // Create a polyline to display the route:\r\n          this.routeLine = new window.H.map.Polyline(linestring, {\r\n            style: { strokeColor: 'blue', lineWidth: 2 }\r\n          });\r\n\r\n          // Create a marker for the start point:\r\n          this.startMarker = new window.H.map.Marker({\r\n            lat: startPoint.latitude,\r\n            lng: startPoint.longitude\r\n          });\r\n\r\n          // Create a marker for the end point:\r\n          this.endMarker = new window.H.map.Marker({\r\n            lat: endPoint.latitude,\r\n            lng: endPoint.longitude\r\n          });\r\n\r\n          // Add the route polyline and the two markers to the map:\r\n          this.map.addObjects([this.routeLine, this.startMarker, this.endMarker]);\r\n\r\n          // Set the map's viewport to make the whole route visible:\r\n          this.map.setViewBounds(this.routeLine.getBounds());\r\n        }\r\n      };\r\n\r\n      // Get an instance of the routing service:\r\n      this.router = this.platform.getRoutingService();\r\n\r\n      // Call calculateRoute() with the routing parameters,\r\n      // the callback and an error callback function (called if a\r\n      // communication error occurs):\r\n      this.router.calculateRoute(this.routingParameters, this.onResult,\r\n        function (error) {\r\n          alert(error.message);\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div ref=\"here-map\" style={{ width: '100%', height: '400px', background: 'grey' }}>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ThemeSelector extends React.Component {\r\n    render() {\r\n        var themes = [\r\n            'normal.day',\r\n            'normal.day.grey',\r\n            'normal.day.transit',\r\n            'normal.night',\r\n            'normal.night.grey',\r\n            'reduced.night',\r\n            'reduced.day',\r\n            'pedestrian.day',\r\n            'pedestrian.night',\r\n        ];\r\n\r\n        var thumbnails = [];\r\n        var onChange = this.props.changeTheme;\r\n        themes.forEach(function(theme) {\r\n            thumbnails.push(<button key={ theme } onClick= { onChange } id={ theme }>{ theme }</button>);\r\n        });\r\n\r\n        return (\r\n            <div>\r\n            { thumbnails }\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class GeocoordinateGetter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            start: '',\r\n            end: ''\r\n        }\r\n        \r\n        this.handleChangeInput = this.handleChangeInput.bind(this);\r\n        this.handleChangeInput2 = this.handleChangeInput2.bind(this);\r\n\r\n    }\r\n\r\n    handleChangeInput(e) {\r\n        this.setState({\r\n            ...this.state,\r\n            start: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeInput2(e) {\r\n        this.setState({\r\n            ...this.state,\r\n            end: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input onChange={(e) => this.handleChangeInput(e)} value={this.state.start} placeholder=\"inicio recorrido\"></input>\r\n                <input onChange={(e) => this.handleChangeInput2(e)} value={this.state.end} placeholder=\"final recorrido\"></input>\r\n                <button onClick={() => this.props.getCoordinates(this.state.start, this.state.end)}>Planificar</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class AddMarker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: \"\",\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            ...this.state,\r\n            input: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <input onChange={(e) => this.handleInputChange(e)}></input>\r\n                <button onClick={() => {\r\n                    this.props.getMarker(this.state.input)\r\n                    this.setState({\r\n                        ...this.state,\r\n                        input: \"\",\r\n                    })\r\n                }}>Agregar Marcador</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Map from './components/Map';\nimport ThemeSelector from './components/ThemeSelector';\nimport GeocoordinateGetter from './components/GeocoordinateGetter';\nimport AddMarker from './components/AddMarker';\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      app_id: \"aNF8XAILH0I6wrjlttyu\",\n      app_code: \"x5U_rooRVBrH10t0UyX4Sw\",\n      theme: 'normal.day',\n      startingPoint: {\n        lat: '',\n        long: '',\n      },\n      endingPoint: {\n        lat: '',\n        long: '',\n      },\n      marker: null,\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n    this.getMarker = this.getMarker.bind(this);\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      // console.log(navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          this.setState({\n            ...this.state,\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            error: null,\n          });\n        },\n        (error) => {\n          // alert(error.message)\n          this.setState({\n            ...this.state,\n            error: error.message\n          })\n        }\n      );\n    }\n  }\n\n  getMarker(marker) {\n    if (marker) {\n    fetch(\"https://geocoder.api.here.com/6.2/geocode.json?app_id=\" + this.state.app_id + \"&app_code=\" + this.state.app_code + \"&searchtext=\" + marker)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          ...this.state,\n          marker: {\n            lat: data.Response.View[0].Result[0].Location.NavigationPosition[0].Latitude,\n            long: data.Response.View[0].Result[0].Location.NavigationPosition[0].Longitude,\n            address: data.Response.View[0].Result[0].Location.Address.Label,\n          }\n        })\n      })\n    }\n  }\n\n  onChange(evt) {\n    evt.preventDefault();\n\n    var change = evt.target.id;\n    this.setState({\n      \"theme\": change,\n    });\n  }\n\n  async getCoordinates(start, end) {\n    this.startingPoint = await fetch(\"https://geocoder.api.here.com/6.2/geocode.json?app_id=\" + this.state.app_id + \"&app_code=\" + this.state.app_code + \"&searchtext=\" + start)\n      .then(data => data.json())\n      .then(data => {\n        return {\n          lat: data.Response.View[0].Result[0].Location.NavigationPosition[0].Latitude,\n          long: data.Response.View[0].Result[0].Location.NavigationPosition[0].Longitude,\n          address: data.Response.View[0].Result[0].Location.Address.Label,\n        }\n      })\n    this.endingPoint = await fetch(\"https://geocoder.api.here.com/6.2/geocode.json?app_id=\" + this.state.app_id + \"&app_code=\" + this.state.app_code + \"&searchtext=\" + end)\n      .then(data => data.json())\n      .then(data => {\n        return {\n          lat: data.Response.View[0].Result[0].Location.NavigationPosition[0].Latitude,\n          long: data.Response.View[0].Result[0].Location.NavigationPosition[0].Longitude,\n          address: data.Response.View[0].Result[0].Location.Address.Label,\n        }\n      })\n\n    this.routeSummary = await fetch(\"https://route.api.here.com/routing/7.2/calculateroute.json?app_id=\" + this.state.app_id + \"&app_code=\" + this.state.app_code + \"&waypoint0=geo!\" + this.startingPoint.lat + \",\" + this.startingPoint.long + \"&waypoint1=geo!\" + this.endingPoint.lat + \",\" + this.endingPoint.long + \"&mode=fastest;pedestrian;traffic:disabled\")\n      .then(data => data.json())\n      .then(data => {\n        // console.log(\"https://route.api.here.com/routing/7.2/calculateroute.json?app_id=\" + this.state.app_id + \"&app_code=\" + this.state.app_code + \"&waypoint0=geo!\" + this.startingPoint.lat + \",\" + this.startingPoint.long + \"&waypoint1=geo!\" + this.endingPoint.lat + \",\" + this.endingPoint.long + \"&mode=fastest;pedestrian;traffic:disabled\")\n        // console.log(data)\n        return data.response.route[0].summary\n      })\n\n    this.setState({\n      ...this.state,\n      startingPoint: {\n        ...this.startingPoint\n        // lat: this.startingPoint.data.Response.View[0].Result[0].Location.NavigationPosition[0].Latitude,\n        // long: this.startingPoint.data.Response.View[0].Result[0].Location.NavigationPosition[0].Longitude,\n        // address: this.startingPoint.data.Response.View[0].Result[0].Location.Address.Label,\n      },\n      endingPoint: {\n        ...this.endingPoint\n        // lat: this.endingPoint.data.Response.View[0].Result[0].Location.NavigationPosition[0].Latitude,\n        // long: this.endingPoint.data.Response.View[0].Result[0].Location.NavigationPosition[0].Longitude,\n        // address: this.endingPoint.data.Response.View[0].Result[0].Location.Address.Label,\n      },\n      routeSummary: this.routeSummary\n    })\n\n\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Map\n          app_id={this.state.app_id}\n          app_code={this.state.app_code}\n          lat={this.state.lat ? this.state.lat : \"-33.4489\"}\n          lng={this.state.lng ? this.state.lng : \"-70.6693\"}\n          zoom=\"12\"\n          theme={this.state.theme}\n          startingPoint={this.state.startingPoint}\n          endingPoint={this.state.endingPoint}\n          marker={this.state.marker}\n        />\n        <ThemeSelector changeTheme={this.onChange} />\n        <GeocoordinateGetter\n          getCoordinates={this.getCoordinates}\n        />\n        <AddMarker\n        getMarker={this.getMarker}\n        />\n\n        <div>{this.state.lat ? this.state.lat : \"nada\"}</div>\n        <div>{this.state.lng ? this.state.lng : \"nada\"}</div>\n\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}